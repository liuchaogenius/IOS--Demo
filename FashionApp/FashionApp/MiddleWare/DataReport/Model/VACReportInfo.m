// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.0.0 by WSRD Tencent.
// Generated from `/Users/eric/Documents/Projects/iPhoneQQ_6.0.0_VAC_wallet/Classes/ui/QQWallet/DataReport/JCE/VACDReport.jce'
// **********************************************************************

#import "VACReportInfo.h"
#import "QQWalletStorageManager.h"

#if ! __has_feature(objc_arc)
#error This file must be compiled with ARC. Use -fobjc-arc flag (or convert project to ARC).
#endif

static NSString * const kStorageKey = @"VACDataInfo";

@implementation VACReportInfo

#if JCE_USE_DYNAMIC_PROPERTY
@dynamic JV2_PROP_NM(r,0,header);
@dynamic JV2_PROP_NM(o,1,body);
#endif

- (instancetype)initWithModule:(NSString *)module action:(NSString *)action{
    if (self = [super init]) {
        self.jce_header = [[VACReportHeader alloc] initWithModule:module action:action];
        self.jce_body = [VACReportBody object];
    }
    return self;
}

+ (NSString*)jceType
{
    return @"MQQ.ReportInfo";
}

#pragma mark - Private

// 从磁盘读取
// key: seqno ----- value: VACReportInfo的data
NSMutableDictionary* readDic(){
    NSMutableDictionary *d = [NSKeyedUnarchiver unarchiveObjectWithData:[[QQWalletStorageManager sharedInstance] getCacheDataForKey:kStorageKey]];

    if (d.count > 50) {  // 多余50个就删掉
        QLog_Event(Module_VAC_Wallet, "上报的数量超过了限制：%lu", (unsigned long)d.count);
        d = nil;
    }
    if (!d || ![d isKindOfClass:[NSMutableDictionary class]]) {

        d = [[NSMutableDictionary alloc] init];
    }
    return d;
}

// 写磁盘，写到钱包通用的文件里，key为：kStorageKey  @"VACDataInfo"
void saveDic(NSMutableDictionary *d){
    [[QQWalletStorageManager sharedInstance] cacheData:[NSKeyedArchiver archivedDataWithRootObject:d] withKey:kStorageKey];
}

#pragma mark - Public

// 保存到磁盘，以Dictionary写到一个文件里，seqno作为key
- (void)saveToDisk{
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        @synchronized (kStorageKey) {
            NSMutableDictionary *d = readDic();
            // seqno作为key
            d[@(self.jce_header.jce_seqno)] = [self toData];
            saveDic(d);
        }
    });
}

// 删除自己
- (void)deleteFromDisk{
    [VACReportInfo deleteFromDisk:self.jce_header.jce_seqno];
}

// 删除指定seqno的info
+ (void)deleteFromDisk:(int64_t)seqNo{
    NSMutableDictionary *d = readDic();
    [d removeObjectForKey:@(seqNo)];
    saveDic(d);
}

+ (NSMutableArray *)loadFromDisk{
    NSMutableDictionary *d = readDic();
    NSMutableArray *result = [NSMutableArray array];
    for (id aKey in [d allKeys]) {
        @try {
            VACReportInfo *aInfo = [VACReportInfo fromData:d[aKey]];
            [result addObject:aInfo];
        }
        @catch (NSException *exception) {
            QLog_Event(Module_VAC_Wallet, "parse reportInfo error: %s", [exception reason].UTF8String);
            [d removeObjectForKey:aKey];
            QLog_Event(Module_VAC_Wallet, "remove the value for key: %s", CZ_getDescription(aKey));
            saveDic(d);
        }
    }
    return result;
}

@end
